// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proj/transactions/Messages.proto

package transactions;

public final class Messages {
  private Messages() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class FileInfo extends
      com.google.protobuf.GeneratedMessage {
    // Use FileInfo.newBuilder() to construct.
    private FileInfo() {
      initFields();
    }
    private FileInfo(boolean noInit) {}
    
    private static final FileInfo defaultInstance;
    public static FileInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public FileInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return transactions.Messages.internal_static_FileInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return transactions.Messages.internal_static_FileInfo_fieldAccessorTable;
    }
    
    // required string filename = 1;
    public static final int FILENAME_FIELD_NUMBER = 1;
    private boolean hasFilename;
    private java.lang.String filename_ = "";
    public boolean hasFilename() { return hasFilename; }
    public java.lang.String getFilename() { return filename_; }
    
    // required int32 version = 2;
    public static final int VERSION_FIELD_NUMBER = 2;
    private boolean hasVersion;
    private int version_ = 0;
    public boolean hasVersion() { return hasVersion; }
    public int getVersion() { return version_; }
    
    // repeated int32 copyset = 3;
    public static final int COPYSET_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> copyset_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getCopysetList() {
      return copyset_;
    }
    public int getCopysetCount() { return copyset_.size(); }
    public int getCopyset(int index) {
      return copyset_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasFilename) return false;
      if (!hasVersion) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasFilename()) {
        output.writeString(1, getFilename());
      }
      if (hasVersion()) {
        output.writeInt32(2, getVersion());
      }
      for (int element : getCopysetList()) {
        output.writeInt32(3, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasFilename()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getFilename());
      }
      if (hasVersion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getVersion());
      }
      {
        int dataSize = 0;
        for (int element : getCopysetList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getCopysetList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static transactions.Messages.FileInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static transactions.Messages.FileInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static transactions.Messages.FileInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static transactions.Messages.FileInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static transactions.Messages.FileInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static transactions.Messages.FileInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static transactions.Messages.FileInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static transactions.Messages.FileInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static transactions.Messages.FileInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static transactions.Messages.FileInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(transactions.Messages.FileInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private transactions.Messages.FileInfo result;
      
      // Construct using transactions.Messages.FileInfo.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new transactions.Messages.FileInfo();
        return builder;
      }
      
      protected transactions.Messages.FileInfo internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new transactions.Messages.FileInfo();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return transactions.Messages.FileInfo.getDescriptor();
      }
      
      public transactions.Messages.FileInfo getDefaultInstanceForType() {
        return transactions.Messages.FileInfo.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public transactions.Messages.FileInfo build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private transactions.Messages.FileInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public transactions.Messages.FileInfo buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.copyset_ != java.util.Collections.EMPTY_LIST) {
          result.copyset_ =
            java.util.Collections.unmodifiableList(result.copyset_);
        }
        transactions.Messages.FileInfo returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof transactions.Messages.FileInfo) {
          return mergeFrom((transactions.Messages.FileInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(transactions.Messages.FileInfo other) {
        if (other == transactions.Messages.FileInfo.getDefaultInstance()) return this;
        if (other.hasFilename()) {
          setFilename(other.getFilename());
        }
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (!other.copyset_.isEmpty()) {
          if (result.copyset_.isEmpty()) {
            result.copyset_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.copyset_.addAll(other.copyset_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setFilename(input.readString());
              break;
            }
            case 16: {
              setVersion(input.readInt32());
              break;
            }
            case 24: {
              addCopyset(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addCopyset(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // required string filename = 1;
      public boolean hasFilename() {
        return result.hasFilename();
      }
      public java.lang.String getFilename() {
        return result.getFilename();
      }
      public Builder setFilename(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasFilename = true;
        result.filename_ = value;
        return this;
      }
      public Builder clearFilename() {
        result.hasFilename = false;
        result.filename_ = getDefaultInstance().getFilename();
        return this;
      }
      
      // required int32 version = 2;
      public boolean hasVersion() {
        return result.hasVersion();
      }
      public int getVersion() {
        return result.getVersion();
      }
      public Builder setVersion(int value) {
        result.hasVersion = true;
        result.version_ = value;
        return this;
      }
      public Builder clearVersion() {
        result.hasVersion = false;
        result.version_ = 0;
        return this;
      }
      
      // repeated int32 copyset = 3;
      public java.util.List<java.lang.Integer> getCopysetList() {
        return java.util.Collections.unmodifiableList(result.copyset_);
      }
      public int getCopysetCount() {
        return result.getCopysetCount();
      }
      public int getCopyset(int index) {
        return result.getCopyset(index);
      }
      public Builder setCopyset(int index, int value) {
        result.copyset_.set(index, value);
        return this;
      }
      public Builder addCopyset(int value) {
        if (result.copyset_.isEmpty()) {
          result.copyset_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.copyset_.add(value);
        return this;
      }
      public Builder addAllCopyset(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.copyset_.isEmpty()) {
          result.copyset_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.copyset_);
        return this;
      }
      public Builder clearCopyset() {
        result.copyset_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:FileInfo)
    }
    
    static {
      defaultInstance = new FileInfo(true);
      transactions.Messages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FileInfo)
  }
  
  public static final class FileTable extends
      com.google.protobuf.GeneratedMessage {
    // Use FileTable.newBuilder() to construct.
    private FileTable() {
      initFields();
    }
    private FileTable(boolean noInit) {}
    
    private static final FileTable defaultInstance;
    public static FileTable getDefaultInstance() {
      return defaultInstance;
    }
    
    public FileTable getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return transactions.Messages.internal_static_FileTable_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return transactions.Messages.internal_static_FileTable_fieldAccessorTable;
    }
    
    // repeated .FileInfo files = 1;
    public static final int FILES_FIELD_NUMBER = 1;
    private java.util.List<transactions.Messages.FileInfo> files_ =
      java.util.Collections.emptyList();
    public java.util.List<transactions.Messages.FileInfo> getFilesList() {
      return files_;
    }
    public int getFilesCount() { return files_.size(); }
    public transactions.Messages.FileInfo getFiles(int index) {
      return files_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (transactions.Messages.FileInfo element : getFilesList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (transactions.Messages.FileInfo element : getFilesList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (transactions.Messages.FileInfo element : getFilesList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static transactions.Messages.FileTable parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static transactions.Messages.FileTable parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static transactions.Messages.FileTable parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static transactions.Messages.FileTable parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static transactions.Messages.FileTable parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static transactions.Messages.FileTable parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static transactions.Messages.FileTable parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static transactions.Messages.FileTable parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static transactions.Messages.FileTable parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static transactions.Messages.FileTable parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(transactions.Messages.FileTable prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private transactions.Messages.FileTable result;
      
      // Construct using transactions.Messages.FileTable.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new transactions.Messages.FileTable();
        return builder;
      }
      
      protected transactions.Messages.FileTable internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new transactions.Messages.FileTable();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return transactions.Messages.FileTable.getDescriptor();
      }
      
      public transactions.Messages.FileTable getDefaultInstanceForType() {
        return transactions.Messages.FileTable.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public transactions.Messages.FileTable build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private transactions.Messages.FileTable buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public transactions.Messages.FileTable buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.files_ != java.util.Collections.EMPTY_LIST) {
          result.files_ =
            java.util.Collections.unmodifiableList(result.files_);
        }
        transactions.Messages.FileTable returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof transactions.Messages.FileTable) {
          return mergeFrom((transactions.Messages.FileTable)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(transactions.Messages.FileTable other) {
        if (other == transactions.Messages.FileTable.getDefaultInstance()) return this;
        if (!other.files_.isEmpty()) {
          if (result.files_.isEmpty()) {
            result.files_ = new java.util.ArrayList<transactions.Messages.FileInfo>();
          }
          result.files_.addAll(other.files_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              transactions.Messages.FileInfo.Builder subBuilder = transactions.Messages.FileInfo.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFiles(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .FileInfo files = 1;
      public java.util.List<transactions.Messages.FileInfo> getFilesList() {
        return java.util.Collections.unmodifiableList(result.files_);
      }
      public int getFilesCount() {
        return result.getFilesCount();
      }
      public transactions.Messages.FileInfo getFiles(int index) {
        return result.getFiles(index);
      }
      public Builder setFiles(int index, transactions.Messages.FileInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.files_.set(index, value);
        return this;
      }
      public Builder setFiles(int index, transactions.Messages.FileInfo.Builder builderForValue) {
        result.files_.set(index, builderForValue.build());
        return this;
      }
      public Builder addFiles(transactions.Messages.FileInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.files_.isEmpty()) {
          result.files_ = new java.util.ArrayList<transactions.Messages.FileInfo>();
        }
        result.files_.add(value);
        return this;
      }
      public Builder addFiles(transactions.Messages.FileInfo.Builder builderForValue) {
        if (result.files_.isEmpty()) {
          result.files_ = new java.util.ArrayList<transactions.Messages.FileInfo>();
        }
        result.files_.add(builderForValue.build());
        return this;
      }
      public Builder addAllFiles(
          java.lang.Iterable<? extends transactions.Messages.FileInfo> values) {
        if (result.files_.isEmpty()) {
          result.files_ = new java.util.ArrayList<transactions.Messages.FileInfo>();
        }
        super.addAll(values, result.files_);
        return this;
      }
      public Builder clearFiles() {
        result.files_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:FileTable)
    }
    
    static {
      defaultInstance = new FileTable(true);
      transactions.Messages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FileTable)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FileInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FileInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FileTable_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FileTable_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n proj/transactions/Messages.proto\">\n\010Fi" +
      "leInfo\022\020\n\010filename\030\001 \002(\t\022\017\n\007version\030\002 \002(" +
      "\005\022\017\n\007copyset\030\003 \003(\005\"%\n\tFileTable\022\030\n\005files" +
      "\030\001 \003(\0132\t.FileInfoB\016\n\014transactions"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_FileInfo_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_FileInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FileInfo_descriptor,
              new java.lang.String[] { "Filename", "Version", "Copyset", },
              transactions.Messages.FileInfo.class,
              transactions.Messages.FileInfo.Builder.class);
          internal_static_FileTable_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_FileTable_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FileTable_descriptor,
              new java.lang.String[] { "Files", },
              transactions.Messages.FileTable.class,
              transactions.Messages.FileTable.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
